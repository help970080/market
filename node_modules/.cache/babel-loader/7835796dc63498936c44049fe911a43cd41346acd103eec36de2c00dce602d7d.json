{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\LEO\\\\downloads\\\\project\\\\src\\\\AuthContext.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport { supabase } from './supabaseClient';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthContext = /*#__PURE__*/createContext();\nexport const AuthProvider = ({\n  children\n}) => {\n  _s();\n  const [session, setSession] = useState(null);\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const fetchSession = async () => {\n      var _session$user;\n      const {\n        data: {\n          session\n        },\n        error\n      } = await supabase.auth.getSession();\n      if (error) {\n        console.error(\"Error fetching session:\", error);\n      }\n      setSession(session);\n      setUser((_session$user = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user !== void 0 ? _session$user : null);\n      setLoading(false);\n    };\n    fetchSession();\n    const {\n      data: {\n        subscription\n      }\n    } = supabase.auth.onAuthStateChange((_event, session) => {\n      var _session$user2;\n      setSession(session);\n      setUser((_session$user2 = session === null || session === void 0 ? void 0 : session.user) !== null && _session$user2 !== void 0 ? _session$user2 : null);\n      setLoading(false);\n    });\n    return () => subscription.unsubscribe();\n  }, []);\n  const value = {\n    session,\n    user,\n    loading,\n    signIn: (email, password) => supabase.auth.signInWithPassword({\n      email,\n      password\n    }),\n    signOut: () => supabase.auth.signOut()\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: value,\n    children: !loading && children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthProvider, \"8Npza+TpLja7+9UDZkJCcEviu5o=\");\n_c = AuthProvider;\nexport const useAuth = () => {\n  _s2();\n  return useContext(AuthContext);\n};\n_s2(useAuth, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nvar _c;\n$RefreshReg$(_c, \"AuthProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","supabase","jsxDEV","_jsxDEV","AuthContext","AuthProvider","children","_s","session","setSession","loading","setLoading","user","setUser","fetchSession","_session$user","data","error","auth","getSession","console","subscription","onAuthStateChange","_event","_session$user2","unsubscribe","value","signIn","email","password","signInWithPassword","signOut","Provider","fileName","_jsxFileName","lineNumber","columnNumber","_c","useAuth","_s2","$RefreshReg$"],"sources":["C:/Users/LEO/downloads/project/src/AuthContext.js"],"sourcesContent":["import React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport { supabase } from './supabaseClient';\r\n\r\nconst AuthContext = createContext();\r\n\r\nexport const AuthProvider = ({ children }) => {\r\n  const [session, setSession] = useState(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const fetchSession = async () => {\r\n      const { data: { session }, error } = await supabase.auth.getSession();\r\n      if (error) {\r\n        console.error(\"Error fetching session:\", error);\r\n      }\r\n      setSession(session);\r\n      setUser(session?.user ?? null);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchSession();\r\n\r\n    const { data: { subscription } } = supabase.auth.onAuthStateChange((_event, session) => {\r\n      setSession(session);\r\n      setUser(session?.user ?? null);\r\n      setLoading(false);\r\n    });\r\n\r\n    return () => subscription.unsubscribe();\r\n  }, []);\r\n\r\n  const value = {\r\n    session,\r\n    user,\r\n    loading,\r\n    signIn: (email, password) => supabase.auth.signInWithPassword({ email, password }),\r\n    signOut: () => supabase.auth.signOut(),\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={value}>\r\n      {!loading && children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport const useAuth = () => useContext(AuthContext);"],"mappings":";;;AAAA,OAAOA,KAAK,IAAIC,aAAa,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,UAAU,QAAQ,OAAO;AAC7E,SAASC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5C,MAAMC,WAAW,gBAAGP,aAAa,CAAC,CAAC;AAEnC,OAAO,MAAMQ,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC5C,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACY,OAAO,EAAEC,UAAU,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAC5C,MAAM,CAACc,IAAI,EAAEC,OAAO,CAAC,GAAGf,QAAQ,CAAC,IAAI,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACd,MAAMe,YAAY,GAAG,MAAAA,CAAA,KAAY;MAAA,IAAAC,aAAA;MAC/B,MAAM;QAAEC,IAAI,EAAE;UAAER;QAAQ,CAAC;QAAES;MAAM,CAAC,GAAG,MAAMhB,QAAQ,CAACiB,IAAI,CAACC,UAAU,CAAC,CAAC;MACrE,IAAIF,KAAK,EAAE;QACTG,OAAO,CAACH,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MACjD;MACAR,UAAU,CAACD,OAAO,CAAC;MACnBK,OAAO,EAAAE,aAAA,GAACP,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,IAAI,cAAAG,aAAA,cAAAA,aAAA,GAAI,IAAI,CAAC;MAC9BJ,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDG,YAAY,CAAC,CAAC;IAEd,MAAM;MAAEE,IAAI,EAAE;QAAEK;MAAa;IAAE,CAAC,GAAGpB,QAAQ,CAACiB,IAAI,CAACI,iBAAiB,CAAC,CAACC,MAAM,EAAEf,OAAO,KAAK;MAAA,IAAAgB,cAAA;MACtFf,UAAU,CAACD,OAAO,CAAC;MACnBK,OAAO,EAAAW,cAAA,GAAChB,OAAO,aAAPA,OAAO,uBAAPA,OAAO,CAAEI,IAAI,cAAAY,cAAA,cAAAA,cAAA,GAAI,IAAI,CAAC;MAC9Bb,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC,CAAC;IAEF,OAAO,MAAMU,YAAY,CAACI,WAAW,CAAC,CAAC;EACzC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,KAAK,GAAG;IACZlB,OAAO;IACPI,IAAI;IACJF,OAAO;IACPiB,MAAM,EAAEA,CAACC,KAAK,EAAEC,QAAQ,KAAK5B,QAAQ,CAACiB,IAAI,CAACY,kBAAkB,CAAC;MAAEF,KAAK;MAAEC;IAAS,CAAC,CAAC;IAClFE,OAAO,EAAEA,CAAA,KAAM9B,QAAQ,CAACiB,IAAI,CAACa,OAAO,CAAC;EACvC,CAAC;EAED,oBACE5B,OAAA,CAACC,WAAW,CAAC4B,QAAQ;IAACN,KAAK,EAAEA,KAAM;IAAApB,QAAA,EAChC,CAACI,OAAO,IAAIJ;EAAQ;IAAA2B,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE3B,CAAC;AAAC7B,EAAA,CAxCWF,YAAY;AAAAgC,EAAA,GAAZhC,YAAY;AA0CzB,OAAO,MAAMiC,OAAO,GAAGA,CAAA;EAAAC,GAAA;EAAA,OAAMvC,UAAU,CAACI,WAAW,CAAC;AAAA;AAACmC,GAAA,CAAxCD,OAAO;AAAA,IAAAD,EAAA;AAAAG,YAAA,CAAAH,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}